import(R.utils)

importFrom("graphics", "abline", "legend", "lines", "matplot", "mtext", "par", "points") 
importFrom("grDevices", "dev.off", "pdf")
importFrom("stats", ".checkMFClasses", ".getXlevels", "as.formula",
           "binomial", "coef", "delete.response", "family", "formula",
           "glm", "glm.control", "is.empty.model", "model.extract",
           "model.frame", "model.matrix", "model.offset",
           "model.response", "model.weights", "optim", "predict",
           "qnorm", "rbeta", "rbinom", "rgamma", "runif", "terms",
           "update")
importFrom("utils", "str")

importFrom(R.methodsS3, setMethodS3, throw)
importFrom(R.oo, setConstructorS3, extend, Object, getHistory)
importFrom(graphics, plot)

S3method(as.character, TSMLCARA)
S3method(getHistory, TSMLCARA)
S3method(getObs, TSMLCARA)
S3method(getPsi, TSMLCARA)
S3method(getPsiSd, TSMLCARA)
S3method(getRegret, TSMLCARA)
S3method(getRegretSd, TSMLCARA)
S3method(plot, TSMLCARA)
S3method(setConfLevel, TSMLCARA)

export(as.character, as.character.TSMLCARA,
       getHistory, getHistory.TSMLCARA,
       getObs, getObs.TSMLCARA,
       getOptTm,
       getOptVar,
       getPsi, getPsi.TSMLCARA,
       getPsiSd, getPsiSd.TSMLCARA,
       getRegret, getRegret.TSMLCARA,
       getRegretSd, getRegretSd.TSMLCARA,
       getSample,
       makeLearnQ,
       makeLearnQ.piecewise,
       oneOne,
       plot, plot.TSMLCARA,
       printHistory,
       Qbar1, Qbar2,
       ruleQbar,
       setConfLevel, setConfLevel.TSMLCARA,
       tsml.cara.rct,
       Vbar1, Vbar2)
